MACRO(FIND_LUA MAJOR MINOR)
  SET(_NAME "Lua${MAJOR}${MINOR}")
  SET(_VERSION "${MAJOR}.${MINOR}")
  FIND_PACKAGE_HELPER(${_NAME} lua.h RELEASE lua${_VERSION} lua-${_VERSION} DEBUG lua${_VERSION}d lua-${_VERSION}d SUFFIXES lua${_VERSION} lua-${_VERSION} QUIET)
  
  IF(${_UPNAME_FIXED}_FOUND)
    SET(LUA_FOUND ON)
    SET(LUA_INCLUDE_DIRS ${${_UPNAME_FIXED}_INCLUDE_DIRS})
    SET(LUA_LIBRARIES ${${_UPNAME_FIXED}_LIBRARIES})
  ENDIF(${_UPNAME_FIXED}_FOUND)
ENDMACRO(FIND_LUA)

FIND_LUA(5 2)

IF(NOT LUA_FOUND)
  FIND_LUA(5 1)
ENDIF(NOT LUA_FOUND)

IF(NOT LUA_FOUND)
  FIND_LUA(5 0)
ENDIF(NOT LUA_FOUND)

IF(NOT LUA_FOUND)
  FIND_PACKAGE_HELPER(Lua lua.h RELEASE lua DEBUG luad QUIET)
ENDIF(NOT LUA_FOUND)

IF(LUA_FOUND)
  # include the math library for Unix
  IF(UNIX AND NOT APPLE)
    FIND_LIBRARY(LUA_MATH_LIBRARY m)
    SET(LUA_LIBRARIES ${LUA_LIBRARIES} ${LUA_MATH_LIBRARY} CACHE STRING "Lua Libraries")
    # For Windows and Mac, don't need to explicitly include the math library
  ENDIF(UNIX AND NOT APPLE)

  FILE(STRINGS "${${_UPNAME_FIXED}_INCLUDE_DIR}/lua.h" lua_version_str REGEX "^#define[ \t]+LUA_RELEASE[ \t]+\"Lua .+\"")

  STRING(REGEX REPLACE "^#define[ \t]+LUA_RELEASE[ \t]+\"Lua ([^\"]+)\".*" "\\1" LUA_VERSION_STRING "${lua_version_str}")
  UNSET(lua_version_str)
  MESSAGE_VERSION_PACKAGE_HELPER(Lua ${LUA_LIBRARIES} ${LUA_VERSION_STRING})
ENDIF(LUA_FOUND)
