FIND_PACKAGE_HELPER(MCUClient visio_client.h)

IF(MCUCLIENT_FOUND)
  FIND_PACKAGE(GCLib)

  IF(GCLIB_FOUND)
    SET(MCUCLIENT_INCLUDE_DIRS ${MCUCLIENT_INCLUDE_DIRS} ${GCLIB_INCLUDE_DIRS})
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${GCLIB_LIBRARIES})
  ENDIF(GCLIB_FOUND)

  FIND_PACKAGE(WbClient)

  IF(WBCLIENT_FOUND)
    SET(MCUCLIENT_INCLUDE_DIRS ${MCUCLIENT_INCLUDE_DIRS} ${WBCLIENT_INCLUDE_DIRS})
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${WBCLIENT_LIBRARIES})
  ENDIF(WBCLIENT_FOUND)

  FIND_PACKAGE_HELPER(NetworkLib NetworkLib.h RELEASE network DEBUG networkd)

  IF(NETWORKLIB_FOUND)
    FIND_PACKAGE(Boost 1.42 COMPONENTS random)
    FIND_PACKAGE(BoostCrypto)

    IF(IOS)
      SET(NETWORKLIB_LIBRARIES -force_load ${NETWORKLIB_LIBRARIES})
    ENDIF(IOS)
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${NETWORKLIB_LIBRARIES} ${Boost_LIBRARIES} ${BOOSTCRYPTO_LIBRARIES})
  ENDIF(NETWORKLIB_FOUND)

  FIND_PACKAGE_HELPER(NetworkFilter NetworkFilter.h)

  IF(NETWORKFILTER_FOUND)
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${NETWORKFILTER_LIBRARIES})
  ENDIF(NETWORKFILTER_FOUND)

  FIND_PACKAGE(Speex)

  IF(SPEEX_FOUND)
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${SPEEX_LIBRARIES})
  ENDIF(SPEEX_FOUND)

  FIND_PACKAGE(Speex++)

  IF(SPEEXPP_FOUND)
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${SPEEXPP_LIBRARIES})
  ENDIF(SPEEXPP_FOUND)

  FIND_PACKAGE(Xvid)

  IF(XVID_FOUND)
    SET(MCUCLIENT_LIBRARIES ${MCUCLIENT_LIBRARIES} ${XVID_LIBRARIES})
  ENDIF(XVID_FOUND)
ENDIF(MCUCLIENT_FOUND)
